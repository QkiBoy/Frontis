# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Frontis_Undae_Mensura_vpy2.ui'
#
# Created by: PyQt5 UI code generator 5.13.0
#
# WARNING! All changes made in this file will be lost!


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1024, 766)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(1024, 766))
        MainWindow.setMaximumSize(QtCore.QSize(1024, 766))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(10)
        MainWindow.setFont(font)
        MainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setEnabled(True)
        self.tabWidget.setGeometry(QtCore.QRect(1, 0, 1024, 768))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        self.tabWidget.setContextMenuPolicy(QtCore.Qt.ActionsContextMenu)
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.tabWidget.setIconSize(QtCore.QSize(16, 16))
        self.tabWidget.setObjectName("tabWidget")
        self.calibration_tab = QtWidgets.QWidget()
        self.calibration_tab.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.calibration_tab.sizePolicy().hasHeightForWidth())
        self.calibration_tab.setSizePolicy(sizePolicy)
        self.calibration_tab.setToolTipDuration(-3)
        self.calibration_tab.setObjectName("calibration_tab")
        self.calibration_start = QtWidgets.QPushButton(self.calibration_tab)
        self.calibration_start.setGeometry(QtCore.QRect(0, 10, 700, 30))
        self.calibration_start.setAutoDefault(False)
        self.calibration_start.setDefault(False)
        self.calibration_start.setFlat(False)
        self.calibration_start.setObjectName("calibration_start")
        self.calibration_skip = QtWidgets.QPushButton(self.calibration_tab)
        self.calibration_skip.setGeometry(QtCore.QRect(700, 10, 319, 30))
        self.calibration_skip.setObjectName("calibration_skip")
        self.camera_differential_view = QtWidgets.QLabel(self.calibration_tab)
        self.camera_differential_view.setGeometry(QtCore.QRect(355, 80, 660, 528))
        self.camera_differential_view.setText("")
        self.camera_differential_view.setPixmap(QtGui.QPixmap("../../OneDrive - Politechnika Warszawska/MATLAB/LSBSE_Soft/wallpaper.jpg"))
        self.camera_differential_view.setScaledContents(True)
        self.camera_differential_view.setAlignment(QtCore.Qt.AlignCenter)
        self.camera_differential_view.setObjectName("camera_differential_view")
        self.calibration_end = QtWidgets.QPushButton(self.calibration_tab)
        self.calibration_end.setGeometry(QtCore.QRect(0, 630, 700, 30))
        self.calibration_end.setObjectName("calibration_end")
        self.camera_view_X = QtWidgets.QLabel(self.calibration_tab)
        self.camera_view_X.setGeometry(QtCore.QRect(5, 80, 310, 248))
        self.camera_view_X.setText("")
        self.camera_view_X.setPixmap(QtGui.QPixmap("../../OneDrive - Politechnika Warszawska/MATLAB/LSBSE_Soft/wallpaper.jpg"))
        self.camera_view_X.setScaledContents(True)
        self.camera_view_X.setAlignment(QtCore.Qt.AlignCenter)
        self.camera_view_X.setObjectName("camera_view_X")
        self.camera_view_Y = QtWidgets.QLabel(self.calibration_tab)
        self.camera_view_Y.setGeometry(QtCore.QRect(5, 360, 310, 248))
        self.camera_view_Y.setText("")
        self.camera_view_Y.setPixmap(QtGui.QPixmap("../../OneDrive - Politechnika Warszawska/MATLAB/LSBSE_Soft/wallpaper.jpg"))
        self.camera_view_Y.setScaledContents(True)
        self.camera_view_Y.setAlignment(QtCore.Qt.AlignCenter)
        self.camera_view_Y.setObjectName("camera_view_Y")
        self.pop_up_preview_button = QtWidgets.QPushButton(self.calibration_tab)
        self.pop_up_preview_button.setGeometry(QtCore.QRect(700, 630, 319, 30))
        self.pop_up_preview_button.setObjectName("pop_up_preview_button")
        self.camera_view_X_label = QtWidgets.QLabel(self.calibration_tab)
        self.camera_view_X_label.setGeometry(QtCore.QRect(5, 50, 310, 30))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(25, 140, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(25, 140, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.camera_view_X_label.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("MS Sans Serif")
        font.setBold(True)
        font.setWeight(75)
        self.camera_view_X_label.setFont(font)
        self.camera_view_X_label.setTextFormat(QtCore.Qt.PlainText)
        self.camera_view_X_label.setAlignment(QtCore.Qt.AlignCenter)
        self.camera_view_X_label.setObjectName("camera_view_X_label")
        self.camera_view_Y_label = QtWidgets.QLabel(self.calibration_tab)
        self.camera_view_Y_label.setGeometry(QtCore.QRect(5, 330, 310, 30))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(200, 43, 43))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(200, 43, 43))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.camera_view_Y_label.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("MS Sans Serif")
        font.setBold(True)
        font.setWeight(75)
        self.camera_view_Y_label.setFont(font)
        self.camera_view_Y_label.setAlignment(QtCore.Qt.AlignCenter)
        self.camera_view_Y_label.setObjectName("camera_view_Y_label")
        self.camera_differential_label = QtWidgets.QLabel(self.calibration_tab)
        self.camera_differential_label.setGeometry(QtCore.QRect(355, 50, 660, 30))
        font = QtGui.QFont()
        font.setFamily("MS Sans Serif")
        font.setBold(True)
        font.setWeight(75)
        font.setStrikeOut(False)
        font.setKerning(True)
        self.camera_differential_label.setFont(font)
        self.camera_differential_label.setAlignment(QtCore.Qt.AlignCenter)
        self.camera_differential_label.setObjectName("camera_differential_label")
        self.tabWidget.addTab(self.calibration_tab, "")
        self.registration_tab = QtWidgets.QWidget()
        self.registration_tab.setEnabled(True)
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(10)
        self.registration_tab.setFont(font)
        self.registration_tab.setObjectName("registration_tab")
        self.camera_view_X2 = QtWidgets.QLabel(self.registration_tab)
        self.camera_view_X2.setGeometry(QtCore.QRect(5, 35, 500, 400))
        self.camera_view_X2.setText("")
        self.camera_view_X2.setPixmap(QtGui.QPixmap("../../OneDrive - Politechnika Warszawska/MATLAB/LSBSE_Soft/wallpaper.jpg"))
        self.camera_view_X2.setScaledContents(True)
        self.camera_view_X2.setAlignment(QtCore.Qt.AlignCenter)
        self.camera_view_X2.setObjectName("camera_view_X2")
        self.camera_view_X2_label = QtWidgets.QLabel(self.registration_tab)
        self.camera_view_X2_label.setGeometry(QtCore.QRect(5, 0, 500, 30))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(25, 140, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(25, 140, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.camera_view_X2_label.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("MS Sans Serif")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.camera_view_X2_label.setFont(font)
        self.camera_view_X2_label.setAlignment(QtCore.Qt.AlignCenter)
        self.camera_view_X2_label.setObjectName("camera_view_X2_label")
        self.camera_view_Y2 = QtWidgets.QLabel(self.registration_tab)
        self.camera_view_Y2.setGeometry(QtCore.QRect(512, 35, 500, 400))
        self.camera_view_Y2.setText("")
        self.camera_view_Y2.setPixmap(QtGui.QPixmap("../../OneDrive - Politechnika Warszawska/MATLAB/LSBSE_Soft/wallpaper.jpg"))
        self.camera_view_Y2.setScaledContents(True)
        self.camera_view_Y2.setAlignment(QtCore.Qt.AlignCenter)
        self.camera_view_Y2.setObjectName("camera_view_Y2")
        self.camera_view_Y2_label = QtWidgets.QLabel(self.registration_tab)
        self.camera_view_Y2_label.setGeometry(QtCore.QRect(512, 0, 500, 30))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(200, 43, 43))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(200, 43, 43))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.camera_view_Y2_label.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("MS Sans Serif")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.camera_view_Y2_label.setFont(font)
        self.camera_view_Y2_label.setAlignment(QtCore.Qt.AlignCenter)
        self.camera_view_Y2_label.setObjectName("camera_view_Y2_label")
        self.camera_connect_button = QtWidgets.QPushButton(self.registration_tab)
        self.camera_connect_button.setGeometry(QtCore.QRect(358, 450, 300, 30))
        self.camera_connect_button.setObjectName("camera_connect_button")
        self.camera_params_X_groupbox = QtWidgets.QGroupBox(self.registration_tab)
        self.camera_params_X_groupbox.setGeometry(QtCore.QRect(5, 443, 347, 131))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(25, 140, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(25, 140, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.camera_params_X_groupbox.setPalette(palette)
        self.camera_params_X_groupbox.setAlignment(QtCore.Qt.AlignCenter)
        self.camera_params_X_groupbox.setObjectName("camera_params_X_groupbox")
        self.camera_params_mode_X = QtWidgets.QCheckBox(self.camera_params_X_groupbox)
        self.camera_params_mode_X.setGeometry(QtCore.QRect(120, 25, 110, 20))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.camera_params_mode_X.setPalette(palette)
        self.camera_params_mode_X.setObjectName("camera_params_mode_X")
        self.camera_X_gain_label = QtWidgets.QLabel(self.camera_params_X_groupbox)
        self.camera_X_gain_label.setGeometry(QtCore.QRect(10, 65, 70, 20))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.camera_X_gain_label.setPalette(palette)
        self.camera_X_gain_label.setObjectName("camera_X_gain_label")
        self.camera_X_exposure_label = QtWidgets.QLabel(self.camera_params_X_groupbox)
        self.camera_X_exposure_label.setGeometry(QtCore.QRect(10, 95, 100, 20))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.camera_X_exposure_label.setPalette(palette)
        self.camera_X_exposure_label.setObjectName("camera_X_exposure_label")
        self.camera_X_cvalue_gain_label = QtWidgets.QLabel(self.camera_params_X_groupbox)
        self.camera_X_cvalue_gain_label.setGeometry(QtCore.QRect(290, 65, 50, 20))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.camera_X_cvalue_gain_label.setPalette(palette)
        self.camera_X_cvalue_gain_label.setObjectName("camera_X_cvalue_gain_label")
        self.camera_X_exposure_slider = QtWidgets.QSlider(self.camera_params_X_groupbox)
        self.camera_X_exposure_slider.setGeometry(QtCore.QRect(120, 95, 160, 20))
        self.camera_X_exposure_slider.setMinimum(1)
        self.camera_X_exposure_slider.setMaximum(250)
        self.camera_X_exposure_slider.setOrientation(QtCore.Qt.Horizontal)
        self.camera_X_exposure_slider.setTickPosition(QtWidgets.QSlider.NoTicks)
        self.camera_X_exposure_slider.setObjectName("camera_X_exposure_slider")
        self.camera_X_cvalue_exposure_label = QtWidgets.QLabel(self.camera_params_X_groupbox)
        self.camera_X_cvalue_exposure_label.setGeometry(QtCore.QRect(290, 95, 50, 20))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.camera_X_cvalue_exposure_label.setPalette(palette)
        self.camera_X_cvalue_exposure_label.setObjectName("camera_X_cvalue_exposure_label")
        self.camera_X_gain_slider = QtWidgets.QSlider(self.camera_params_X_groupbox)
        self.camera_X_gain_slider.setGeometry(QtCore.QRect(120, 65, 160, 20))
        self.camera_X_gain_slider.setMaximum(20)
        self.camera_X_gain_slider.setOrientation(QtCore.Qt.Horizontal)
        self.camera_X_gain_slider.setObjectName("camera_X_gain_slider")
        self.camera_params_Y_groupbox = QtWidgets.QGroupBox(self.registration_tab)
        self.camera_params_Y_groupbox.setGeometry(QtCore.QRect(665, 443, 347, 131))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(200, 43, 43))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(200, 43, 43))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.camera_params_Y_groupbox.setPalette(palette)
        self.camera_params_Y_groupbox.setAlignment(QtCore.Qt.AlignCenter)
        self.camera_params_Y_groupbox.setObjectName("camera_params_Y_groupbox")
        self.camera_params_mode_Y = QtWidgets.QCheckBox(self.camera_params_Y_groupbox)
        self.camera_params_mode_Y.setGeometry(QtCore.QRect(120, 25, 110, 20))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.camera_params_mode_Y.setPalette(palette)
        self.camera_params_mode_Y.setObjectName("camera_params_mode_Y")
        self.camera_Y_gain_label = QtWidgets.QLabel(self.camera_params_Y_groupbox)
        self.camera_Y_gain_label.setGeometry(QtCore.QRect(10, 65, 70, 20))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.camera_Y_gain_label.setPalette(palette)
        self.camera_Y_gain_label.setObjectName("camera_Y_gain_label")
        self.camera_Y_exposure_label = QtWidgets.QLabel(self.camera_params_Y_groupbox)
        self.camera_Y_exposure_label.setGeometry(QtCore.QRect(10, 95, 100, 20))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.camera_Y_exposure_label.setPalette(palette)
        self.camera_Y_exposure_label.setObjectName("camera_Y_exposure_label")
        self.camera_Y_gain_spinbox = QtWidgets.QDoubleSpinBox(self.camera_params_Y_groupbox)
        self.camera_Y_gain_spinbox.setGeometry(QtCore.QRect(120, 65, 60, 20))
        self.camera_Y_gain_spinbox.setObjectName("camera_Y_gain_spinbox")
        self.camera_Y_exposure_spinbox = QtWidgets.QDoubleSpinBox(self.camera_params_Y_groupbox)
        self.camera_Y_exposure_spinbox.setGeometry(QtCore.QRect(120, 95, 60, 20))
        self.camera_Y_exposure_spinbox.setObjectName("camera_Y_exposure_spinbox")
        self.camera_Y_cvalue_gain_label = QtWidgets.QLabel(self.camera_params_Y_groupbox)
        self.camera_Y_cvalue_gain_label.setGeometry(QtCore.QRect(200, 65, 140, 20))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.camera_Y_cvalue_gain_label.setPalette(palette)
        self.camera_Y_cvalue_gain_label.setObjectName("camera_Y_cvalue_gain_label")
        self.camera_Y_cvalue_exposure_label = QtWidgets.QLabel(self.camera_params_Y_groupbox)
        self.camera_Y_cvalue_exposure_label.setGeometry(QtCore.QRect(200, 95, 140, 20))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.camera_Y_cvalue_exposure_label.setPalette(palette)
        self.camera_Y_cvalue_exposure_label.setObjectName("camera_Y_cvalue_exposure_label")
        self.camera_parameters_save_button = QtWidgets.QPushButton(self.registration_tab)
        self.camera_parameters_save_button.setGeometry(QtCore.QRect(358, 504, 300, 30))
        self.camera_parameters_save_button.setObjectName("camera_parameters_save_button")
        self.camera_parameters_load_button = QtWidgets.QPushButton(self.registration_tab)
        self.camera_parameters_load_button.setGeometry(QtCore.QRect(358, 544, 300, 30))
        self.camera_parameters_load_button.setObjectName("camera_parameters_load_button")
        self.image_registration_box = QtWidgets.QGroupBox(self.registration_tab)
        self.image_registration_box.setGeometry(QtCore.QRect(5, 585, 1007, 151))
        self.image_registration_box.setAlignment(QtCore.Qt.AlignCenter)
        self.image_registration_box.setObjectName("image_registration_box")
        self.image_path_label = QtWidgets.QLabel(self.image_registration_box)
        self.image_path_label.setGeometry(QtCore.QRect(10, 25, 130, 20))
        self.image_path_label.setObjectName("image_path_label")
        self.image_change_path_button = QtWidgets.QPushButton(self.image_registration_box)
        self.image_change_path_button.setGeometry(QtCore.QRect(910, 54, 92, 25))
        self.image_change_path_button.setObjectName("image_change_path_button")
        self.image_snapshot_button = QtWidgets.QPushButton(self.image_registration_box)
        self.image_snapshot_button.setGeometry(QtCore.QRect(10, 90, 400, 55))
        self.image_snapshot_button.setObjectName("image_snapshot_button")
        self.image_start_button = QtWidgets.QPushButton(self.image_registration_box)
        self.image_start_button.setGeometry(QtCore.QRect(430, 90, 180, 55))
        self.image_start_button.setObjectName("image_start_button")
        self.image_stop_button = QtWidgets.QPushButton(self.image_registration_box)
        self.image_stop_button.setGeometry(QtCore.QRect(630, 90, 180, 55))
        self.image_stop_button.setObjectName("image_stop_button")
        self.image_time_button = QtWidgets.QSpinBox(self.image_registration_box)
        self.image_time_button.setGeometry(QtCore.QRect(830, 119, 70, 25))
        self.image_time_button.setObjectName("image_time_button")
        self.image_fps_button = QtWidgets.QSpinBox(self.image_registration_box)
        self.image_fps_button.setGeometry(QtCore.QRect(920, 119, 70, 25))
        self.image_fps_button.setObjectName("image_fps_button")
        self.image_time_label = QtWidgets.QLabel(self.image_registration_box)
        self.image_time_label.setGeometry(QtCore.QRect(830, 95, 55, 20))
        self.image_time_label.setAlignment(QtCore.Qt.AlignCenter)
        self.image_time_label.setObjectName("image_time_label")
        self.image_fps_label = QtWidgets.QLabel(self.image_registration_box)
        self.image_fps_label.setGeometry(QtCore.QRect(920, 95, 55, 20))
        self.image_fps_label.setAlignment(QtCore.Qt.AlignCenter)
        self.image_fps_label.setObjectName("image_fps_label")
        self.image_save_path_lineedit = QtWidgets.QLineEdit(self.image_registration_box)
        self.image_save_path_lineedit.setGeometry(QtCore.QRect(10, 55, 902, 23))
        self.image_save_path_lineedit.setReadOnly(True)
        self.image_save_path_lineedit.setObjectName("image_save_path_lineedit")
        self.tabWidget.addTab(self.registration_tab, "")
        self.wavefront_reconstruction_tab = QtWidgets.QWidget()
        self.wavefront_reconstruction_tab.setEnabled(True)
        self.wavefront_reconstruction_tab.setObjectName("wavefront_reconstruction_tab")
        self.reconstruction_load_data_button = QtWidgets.QPushButton(self.wavefront_reconstruction_tab)
        self.reconstruction_load_data_button.setGeometry(QtCore.QRect(10, 10, 260, 30))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.reconstruction_load_data_button.sizePolicy().hasHeightForWidth())
        self.reconstruction_load_data_button.setSizePolicy(sizePolicy)
        self.reconstruction_load_data_button.setMinimumSize(QtCore.QSize(260, 30))
        self.reconstruction_load_data_button.setObjectName("reconstruction_load_data_button")
        self.reconstruction_tiltsigns_box = QtWidgets.QGroupBox(self.wavefront_reconstruction_tab)
        self.reconstruction_tiltsigns_box.setGeometry(QtCore.QRect(10, 260, 260, 60))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.reconstruction_tiltsigns_box.sizePolicy().hasHeightForWidth())
        self.reconstruction_tiltsigns_box.setSizePolicy(sizePolicy)
        self.reconstruction_tiltsigns_box.setMinimumSize(QtCore.QSize(260, 60))
        self.reconstruction_tiltsigns_box.setObjectName("reconstruction_tiltsigns_box")
        self.reconstruction_X_tiltsign_checkbox = QtWidgets.QCheckBox(self.reconstruction_tiltsigns_box)
        self.reconstruction_X_tiltsign_checkbox.setGeometry(QtCore.QRect(30, 25, 85, 20))
        self.reconstruction_X_tiltsign_checkbox.setObjectName("reconstruction_X_tiltsign_checkbox")
        self.reconstruction_Y_tiltsign_checkbox = QtWidgets.QCheckBox(self.reconstruction_tiltsigns_box)
        self.reconstruction_Y_tiltsign_checkbox.setGeometry(QtCore.QRect(145, 25, 85, 20))
        self.reconstruction_Y_tiltsign_checkbox.setObjectName("reconstruction_Y_tiltsign_checkbox")
        self.reconstruction_phasesigns_box = QtWidgets.QGroupBox(self.wavefront_reconstruction_tab)
        self.reconstruction_phasesigns_box.setGeometry(QtCore.QRect(10, 330, 260, 60))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.reconstruction_phasesigns_box.sizePolicy().hasHeightForWidth())
        self.reconstruction_phasesigns_box.setSizePolicy(sizePolicy)
        self.reconstruction_phasesigns_box.setMinimumSize(QtCore.QSize(260, 60))
        self.reconstruction_phasesigns_box.setObjectName("reconstruction_phasesigns_box")
        self.reconstruction_X_phasesign_checkbox = QtWidgets.QCheckBox(self.reconstruction_phasesigns_box)
        self.reconstruction_X_phasesign_checkbox.setGeometry(QtCore.QRect(30, 25, 85, 20))
        self.reconstruction_X_phasesign_checkbox.setObjectName("reconstruction_X_phasesign_checkbox")
        self.reconstruction_Y_phasesign_checkbox = QtWidgets.QCheckBox(self.reconstruction_phasesigns_box)
        self.reconstruction_Y_phasesign_checkbox.setGeometry(QtCore.QRect(145, 25, 85, 20))
        self.reconstruction_Y_phasesign_checkbox.setObjectName("reconstruction_Y_phasesign_checkbox")
        self.reconstruction_m2a_label = QtWidgets.QLabel(self.wavefront_reconstruction_tab)
        self.reconstruction_m2a_label.setGeometry(QtCore.QRect(10, 400, 260, 20))
        self.reconstruction_m2a_label.setMinimumSize(QtCore.QSize(260, 20))
        self.reconstruction_m2a_label.setAlignment(QtCore.Qt.AlignCenter)
        self.reconstruction_m2a_label.setObjectName("reconstruction_m2a_label")
        self.reconstruction_data_tree = QtWidgets.QTreeWidget(self.wavefront_reconstruction_tab)
        self.reconstruction_data_tree.setGeometry(QtCore.QRect(10, 50, 260, 200))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.reconstruction_data_tree.sizePolicy().hasHeightForWidth())
        self.reconstruction_data_tree.setSizePolicy(sizePolicy)
        self.reconstruction_data_tree.setLineWidth(3)
        self.reconstruction_data_tree.setColumnCount(1)
        self.reconstruction_data_tree.setObjectName("reconstruction_data_tree")
        self.reconstruction_data_tree.headerItem().setText(0, "1")
        self.reconstruction_data_tree.header().setVisible(False)
        self.reconstruction_m2a_edit = QtWidgets.QLineEdit(self.wavefront_reconstruction_tab)
        self.reconstruction_m2a_edit.setGeometry(QtCore.QRect(80, 425, 120, 25))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.reconstruction_m2a_edit.sizePolicy().hasHeightForWidth())
        self.reconstruction_m2a_edit.setSizePolicy(sizePolicy)
        self.reconstruction_m2a_edit.setMinimumSize(QtCore.QSize(120, 25))
        self.reconstruction_m2a_edit.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.reconstruction_m2a_edit.setObjectName("reconstruction_m2a_edit")
        self.reconstruction_tilttype_box = QtWidgets.QGroupBox(self.wavefront_reconstruction_tab)
        self.reconstruction_tilttype_box.setGeometry(QtCore.QRect(10, 460, 260, 165))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.reconstruction_tilttype_box.sizePolicy().hasHeightForWidth())
        self.reconstruction_tilttype_box.setSizePolicy(sizePolicy)
        self.reconstruction_tilttype_box.setMinimumSize(QtCore.QSize(260, 165))
        self.reconstruction_tilttype_box.setObjectName("reconstruction_tilttype_box")
        self.reonstruction_tilttype_real_button = QtWidgets.QPushButton(self.reconstruction_tilttype_box)
        self.reonstruction_tilttype_real_button.setGeometry(QtCore.QRect(70, 25, 120, 30))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.reonstruction_tilttype_real_button.sizePolicy().hasHeightForWidth())
        self.reonstruction_tilttype_real_button.setSizePolicy(sizePolicy)
        self.reonstruction_tilttype_real_button.setMinimumSize(QtCore.QSize(120, 30))
        self.reonstruction_tilttype_real_button.setObjectName("reonstruction_tilttype_real_button")
        self.reconstruction_tilttype_synthetic_button = QtWidgets.QPushButton(self.reconstruction_tilttype_box)
        self.reconstruction_tilttype_synthetic_button.setGeometry(QtCore.QRect(70, 52, 120, 30))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.reconstruction_tilttype_synthetic_button.sizePolicy().hasHeightForWidth())
        self.reconstruction_tilttype_synthetic_button.setSizePolicy(sizePolicy)
        self.reconstruction_tilttype_synthetic_button.setMinimumSize(QtCore.QSize(120, 30))
        self.reconstruction_tilttype_synthetic_button.setObjectName("reconstruction_tilttype_synthetic_button")
        self.reconstruction_X_wedgeangle_label = QtWidgets.QLabel(self.reconstruction_tilttype_box)
        self.reconstruction_X_wedgeangle_label.setGeometry(QtCore.QRect(10, 95, 140, 25))
        self.reconstruction_X_wedgeangle_label.setMinimumSize(QtCore.QSize(140, 25))
        self.reconstruction_X_wedgeangle_label.setObjectName("reconstruction_X_wedgeangle_label")
        self.reconstruction_Y_wedgeangle_label = QtWidgets.QLabel(self.reconstruction_tilttype_box)
        self.reconstruction_Y_wedgeangle_label.setGeometry(QtCore.QRect(10, 130, 140, 25))
        self.reconstruction_Y_wedgeangle_label.setMinimumSize(QtCore.QSize(140, 25))
        self.reconstruction_Y_wedgeangle_label.setObjectName("reconstruction_Y_wedgeangle_label")
        self.reconstruction_X_wedgeangle_edit = QtWidgets.QLineEdit(self.reconstruction_tilttype_box)
        self.reconstruction_X_wedgeangle_edit.setGeometry(QtCore.QRect(165, 95, 80, 25))
        self.reconstruction_X_wedgeangle_edit.setMinimumSize(QtCore.QSize(80, 25))
        self.reconstruction_X_wedgeangle_edit.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.reconstruction_X_wedgeangle_edit.setObjectName("reconstruction_X_wedgeangle_edit")
        self.reconstruction_Y_wedgeangle_edit = QtWidgets.QLineEdit(self.reconstruction_tilttype_box)
        self.reconstruction_Y_wedgeangle_edit.setGeometry(QtCore.QRect(165, 130, 80, 25))
        self.reconstruction_Y_wedgeangle_edit.setMinimumSize(QtCore.QSize(80, 25))
        self.reconstruction_Y_wedgeangle_edit.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.reconstruction_Y_wedgeangle_edit.setObjectName("reconstruction_Y_wedgeangle_edit")
        self.reconstruction_view_type_checkbox = QtWidgets.QCheckBox(self.wavefront_reconstruction_tab)
        self.reconstruction_view_type_checkbox.setGeometry(QtCore.QRect(10, 630, 260, 25))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.reconstruction_view_type_checkbox.sizePolicy().hasHeightForWidth())
        self.reconstruction_view_type_checkbox.setSizePolicy(sizePolicy)
        self.reconstruction_view_type_checkbox.setMinimumSize(QtCore.QSize(260, 25))
        self.reconstruction_view_type_checkbox.setObjectName("reconstruction_view_type_checkbox")
        self.reconstruction_load_mask_button = QtWidgets.QPushButton(self.wavefront_reconstruction_tab)
        self.reconstruction_load_mask_button.setGeometry(QtCore.QRect(80, 660, 120, 30))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.reconstruction_load_mask_button.sizePolicy().hasHeightForWidth())
        self.reconstruction_load_mask_button.setSizePolicy(sizePolicy)
        self.reconstruction_load_mask_button.setMinimumSize(QtCore.QSize(120, 30))
        self.reconstruction_load_mask_button.setObjectName("reconstruction_load_mask_button")
        self.reconstruction_settings_button = QtWidgets.QPushButton(self.wavefront_reconstruction_tab)
        self.reconstruction_settings_button.setGeometry(QtCore.QRect(80, 700, 120, 30))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.reconstruction_settings_button.sizePolicy().hasHeightForWidth())
        self.reconstruction_settings_button.setSizePolicy(sizePolicy)
        self.reconstruction_settings_button.setMinimumSize(QtCore.QSize(120, 30))
        self.reconstruction_settings_button.setObjectName("reconstruction_settings_button")
        self.reconstruction_Xderivative_label = QtWidgets.QLabel(self.wavefront_reconstruction_tab)
        self.reconstruction_Xderivative_label.setGeometry(QtCore.QRect(345, 15, 260, 20))
        self.reconstruction_Xderivative_label.setAlignment(QtCore.Qt.AlignCenter)
        self.reconstruction_Xderivative_label.setObjectName("reconstruction_Xderivative_label")
        self.reconstruction_Yderivative_label = QtWidgets.QLabel(self.wavefront_reconstruction_tab)
        self.reconstruction_Yderivative_label.setGeometry(QtCore.QRect(680, 15, 260, 20))
        self.reconstruction_Yderivative_label.setAlignment(QtCore.Qt.AlignCenter)
        self.reconstruction_Yderivative_label.setObjectName("reconstruction_Yderivative_label")
        self.reconstruction_Xderivative_preview = QtWidgets.QLabel(self.wavefront_reconstruction_tab)
        self.reconstruction_Xderivative_preview.setGeometry(QtCore.QRect(345, 40, 260, 208))
        self.reconstruction_Xderivative_preview.setText("")
        self.reconstruction_Xderivative_preview.setPixmap(QtGui.QPixmap("../../OneDrive - Politechnika Warszawska/MATLAB/LSBSE_Soft/waitcat.jpg"))
        self.reconstruction_Xderivative_preview.setScaledContents(True)
        self.reconstruction_Xderivative_preview.setObjectName("reconstruction_Xderivative_preview")
        self.reconstruction_Yderivative_preview = QtWidgets.QLabel(self.wavefront_reconstruction_tab)
        self.reconstruction_Yderivative_preview.setGeometry(QtCore.QRect(680, 40, 260, 208))
        self.reconstruction_Yderivative_preview.setText("")
        self.reconstruction_Yderivative_preview.setPixmap(QtGui.QPixmap("../../OneDrive - Politechnika Warszawska/MATLAB/LSBSE_Soft/waitcat.jpg"))
        self.reconstruction_Yderivative_preview.setScaledContents(True)
        self.reconstruction_Yderivative_preview.setObjectName("reconstruction_Yderivative_preview")
        self.reconstruction_wavefront_label = QtWidgets.QLabel(self.wavefront_reconstruction_tab)
        self.reconstruction_wavefront_label.setGeometry(QtCore.QRect(395, 260, 500, 20))
        self.reconstruction_wavefront_label.setAlignment(QtCore.Qt.AlignCenter)
        self.reconstruction_wavefront_label.setObjectName("reconstruction_wavefront_label")
        self.reconstruction_wavefront_preview = QtWidgets.QLabel(self.wavefront_reconstruction_tab)
        self.reconstruction_wavefront_preview.setGeometry(QtCore.QRect(395, 290, 500, 400))
        self.reconstruction_wavefront_preview.setText("")
        self.reconstruction_wavefront_preview.setPixmap(QtGui.QPixmap("../../OneDrive - Politechnika Warszawska/MATLAB/LSBSE_Soft/waitcat.jpg"))
        self.reconstruction_wavefront_preview.setScaledContents(True)
        self.reconstruction_wavefront_preview.setObjectName("reconstruction_wavefront_preview")
        self.reconstruction_save_calculated_button = QtWidgets.QPushButton(self.wavefront_reconstruction_tab)
        self.reconstruction_save_calculated_button.setGeometry(QtCore.QRect(395, 695, 240, 40))
        self.reconstruction_save_calculated_button.setObjectName("reconstruction_save_calculated_button")
        self.reconstruction_calculate_data_button = QtWidgets.QPushButton(self.wavefront_reconstruction_tab)
        self.reconstruction_calculate_data_button.setGeometry(QtCore.QRect(655, 695, 240, 40))
        self.reconstruction_calculate_data_button.setObjectName("reconstruction_calculate_data_button")
        self.reconstruction_selected_data_preview_label = QtWidgets.QLabel(self.wavefront_reconstruction_tab)
        self.reconstruction_selected_data_preview_label.setGeometry(QtCore.QRect(345, 0, 595, 20))
        self.reconstruction_selected_data_preview_label.setAlignment(QtCore.Qt.AlignCenter)
        self.reconstruction_selected_data_preview_label.setObjectName("reconstruction_selected_data_preview_label")
        self.reconstruction_set_to_all_button = QtWidgets.QPushButton(self.wavefront_reconstruction_tab)
        self.reconstruction_set_to_all_button.setEnabled(True)
        self.reconstruction_set_to_all_button.setGeometry(QtCore.QRect(198, 424, 73, 27))
        self.reconstruction_set_to_all_button.setObjectName("reconstruction_set_to_all_button")
        self.tabWidget.addTab(self.wavefront_reconstruction_tab, "")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Frontis Undae Mensura 2.0"))
        self.calibration_start.setText(_translate("MainWindow", "Start Calibration"))
        self.calibration_skip.setText(_translate("MainWindow", "Skip Calibration"))
        self.calibration_end.setText(_translate("MainWindow", "End Calibration"))
        self.pop_up_preview_button.setText(_translate("MainWindow", "Pop-up Differential Preview"))
        self.camera_view_X_label.setText(_translate("MainWindow", "CAMERA X"))
        self.camera_view_Y_label.setText(_translate("MainWindow", "CAMERA Y"))
        self.camera_differential_label.setText(_translate("MainWindow", "DIFFERENTIAL PREVIEW"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.calibration_tab), _translate("MainWindow", "Calibration"))
        self.camera_view_X2_label.setText(_translate("MainWindow", "CAMERA X"))
        self.camera_view_Y2_label.setText(_translate("MainWindow", "CAMERA Y"))
        self.camera_connect_button.setText(_translate("MainWindow", "Live Video"))
        self.camera_params_X_groupbox.setTitle(_translate("MainWindow", "CAMERA X PARAMETERS"))
        self.camera_params_mode_X.setText(_translate("MainWindow", "Auto / Manual"))
        self.camera_X_gain_label.setText(_translate("MainWindow", "Gain [0-20]"))
        self.camera_X_exposure_label.setText(_translate("MainWindow", "Exposure [ms]"))
        self.camera_X_cvalue_gain_label.setText(_translate("MainWindow", "Auto"))
        self.camera_X_cvalue_exposure_label.setText(_translate("MainWindow", "Auto"))
        self.camera_params_Y_groupbox.setTitle(_translate("MainWindow", "CAMERA Y PARAMETERS"))
        self.camera_params_mode_Y.setText(_translate("MainWindow", "Auto / Manual"))
        self.camera_Y_gain_label.setText(_translate("MainWindow", "Gain [0-18]"))
        self.camera_Y_exposure_label.setText(_translate("MainWindow", "Exposure [0-100]"))
        self.camera_Y_cvalue_gain_label.setText(_translate("MainWindow", "Current Value:"))
        self.camera_Y_cvalue_exposure_label.setText(_translate("MainWindow", "Current Value:"))
        self.camera_parameters_save_button.setText(_translate("MainWindow", "Save Cameras\' Parameters to File"))
        self.camera_parameters_load_button.setText(_translate("MainWindow", "Load Cameras\' Parameters to File"))
        self.image_registration_box.setTitle(_translate("MainWindow", "IMAGE REGISTRATION"))
        self.image_path_label.setText(_translate("MainWindow", "Save images to path:"))
        self.image_change_path_button.setText(_translate("MainWindow", "Change Path"))
        self.image_snapshot_button.setText(_translate("MainWindow", "Snapshot"))
        self.image_start_button.setText(_translate("MainWindow", "Start"))
        self.image_stop_button.setText(_translate("MainWindow", "Stop"))
        self.image_time_label.setText(_translate("MainWindow", "Time"))
        self.image_fps_label.setText(_translate("MainWindow", "FPS"))
        self.image_save_path_lineedit.setText(_translate("MainWindow", "COś tu jest"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.registration_tab), _translate("MainWindow", "Registration"))
        self.reconstruction_load_data_button.setText(_translate("MainWindow", "Load data"))
        self.reconstruction_tiltsigns_box.setTitle(_translate("MainWindow", "TILT SIGNS"))
        self.reconstruction_X_tiltsign_checkbox.setText(_translate("MainWindow", "Negative X"))
        self.reconstruction_Y_tiltsign_checkbox.setText(_translate("MainWindow", "Negative Y"))
        self.reconstruction_phasesigns_box.setTitle(_translate("MainWindow", "PHASE SIGNS"))
        self.reconstruction_X_phasesign_checkbox.setText(_translate("MainWindow", "Negative X"))
        self.reconstruction_Y_phasesign_checkbox.setText(_translate("MainWindow", "Negative Y"))
        self.reconstruction_m2a_label.setText(_translate("MainWindow", "Matrix to Aperture ratio"))
        self.reconstruction_tilttype_box.setTitle(_translate("MainWindow", "TILT DATA TYPE"))
        self.reonstruction_tilttype_real_button.setText(_translate("MainWindow", "Real data tilts"))
        self.reconstruction_tilttype_synthetic_button.setText(_translate("MainWindow", "Synthetic tilts"))
        self.reconstruction_X_wedgeangle_label.setText(_translate("MainWindow", "X Wedge Angle [arcmin]"))
        self.reconstruction_Y_wedgeangle_label.setText(_translate("MainWindow", "Y Wedge Angle [arcmin]"))
        self.reconstruction_view_type_checkbox.setText(_translate("MainWindow", "Reconstruction View"))
        self.reconstruction_load_mask_button.setText(_translate("MainWindow", "Load Mask"))
        self.reconstruction_settings_button.setText(_translate("MainWindow", "Settings"))
        self.reconstruction_Xderivative_label.setText(_translate("MainWindow", "X Derivative"))
        self.reconstruction_Yderivative_label.setText(_translate("MainWindow", "Y Derivative"))
        self.reconstruction_wavefront_label.setText(_translate("MainWindow", "Wavefront Preview"))
        self.reconstruction_save_calculated_button.setText(_translate("MainWindow", "Save Calculated Data"))
        self.reconstruction_calculate_data_button.setText(_translate("MainWindow", "Calculate Reconstruction"))
        self.reconstruction_selected_data_preview_label.setText(_translate("MainWindow", "Choosed data name"))
        self.reconstruction_set_to_all_button.setText(_translate("MainWindow", "Set To All"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.wavefront_reconstruction_tab), _translate("MainWindow", "Wavefront Reconstruction (DZPF)"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
